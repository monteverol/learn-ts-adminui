generator client {
  provider = "prisma-client-js"
  // Prefer default output unless you have a monorepo reason
  // output = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  ACTIVE
  ARCHIVED
}

enum JobCategory {
  MAINTENANCE
  OPERATIONS
  OTHER
}

model User {
  id              String           @id @default(cuid())
  name            String
  address         String?
  age             Int?
  status          UserStatus       @default(ACTIVE)
  jobTitle        String?
  jobCategory     JobCategory?
  yearsExperience Int?
  bio             String?
  description     String?
  tags            Tag[]            // implicit M2M
  workExperience  WorkExperience[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  deletedAt       DateTime?

  @@index([status])
  @@index([jobCategory])
  @@index([deletedAt])
}

model Tag {
  id    String @id @default(cuid())
  name  String @unique
  users User[]
}

// WORK EXPERIENCE
model WorkExperience {
  id          String    @id @default(cuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  company     String
  position    String
  startDate   DateTime
  endDate     DateTime?
  isCurrent   Boolean   @default(false)
  description String?
  responsibilities Responsibility[]

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([userId])
}

// RESPONSIBILITIES
model Responsibility {
  id               String          @id @default(cuid())
  workExperience   WorkExperience  @relation(fields: [workExperienceId], references: [id])
  workExperienceId String
  title            String

  @@index([workExperienceId])
}
